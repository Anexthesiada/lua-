-- Spawner_SupersSports.lua
-- Stand (GTA V Legacy) - Modular Spawner: Supers + Sports
-- Funções: spawn forçado, tunagem 100% automática, log detalhado
-- Uso: APENAS SINGLEPLAYER / OFFLINE

util.require_natives()

local logfile = filesystem.scripts_dir() .. "\\superssports_log.txt"
local function log(msg)
    util.toast(msg)
    print("[SupersSports] " .. msg)
    local f = io.open(logfile, "a")
    if f then f:write("[SupersSports] " .. msg .. "\n"); f:close() end
end
-- limpar log a cada execução
local f = io.open(logfile, "w"); if f then f:close() end

-- Funções auxiliares
local function request_model(hash)
    STREAMING.REQUEST_MODEL(hash)
    log("REQUEST_MODEL para hash=" .. tostring(hash))
end

local function try_create(hash, x,y,z,heading,net,scriptHost)
    local veh = VEHICLE.CREATE_VEHICLE(hash, x,y,z,heading, net, scriptHost)
    if veh ~= 0 then
        log(string.format("CREATE_VEHICLE sucesso em x=%.2f y=%.2f z=%.2f | net=%s, host=%s | handle=%s",
            x,y,z,tostring(net),tostring(scriptHost),tostring(veh)))
        return veh
    else
        log(string.format("CREATE_VEHICLE falhou em x=%.2f y=%.2f z=%.2f | net=%s, host=%s",
            x,y,z,tostring(net),tostring(scriptHost)))
        return nil
    end
end

local function spawn_forced(model)
    local hash = util.joaat(model)
    request_model(hash)
    local ped = players.user_ped()
    if not ped or ped == 0 then log("Ped inválido"); return end
    local coords = ENTITY.GET_ENTITY_COORDS(ped)
    local heading = ENTITY.GET_ENTITY_HEADING(ped)

    local attempts = {
        {dz=0.5, net=true, host=true},
        {dz=1.0, net=true, host=true},
        {dz=2.0, net=true, host=true},
        {dz=0.5, net=false, host=false},
        {dz=1.0, net=false, host=false},
        {dz=2.0, net=false, host=false},
    }

    local veh = nil
    for _,a in ipairs(attempts) do
        veh = try_create(hash, coords.x+5.0, coords.y, coords.z+a.dz, heading, a.net, a.host)
        if veh then break end
    end

    if not veh then
        log("CREATE_VEHICLE falhou em todas tentativas. Tentando entities.create_vehicle")
        local pos = v3(coords.x+5.0, coords.y, coords.z+1.0)
        local ent = entities.create_vehicle(hash, pos, heading)
        if ent and ent ~= INVALID_GUID then
            log("entities.create_vehicle sucesso. GUID=" .. tostring(ent))
            veh = ent
        else
            log("entities.create_vehicle também falhou.")
            return
        end
    end

    pcall(function() PED.SET_PED_INTO_VEHICLE(ped, veh, -1) end)
    log("Spawn concluído para model=" .. model)
    STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(hash)
end

-- Tunagem automática
local function upgrade_vehicle_full()
    local ped = players.user_ped()
    if not PED.IS_PED_IN_ANY_VEHICLE(ped, false) then util.toast("Você não está em um veículo"); return end
    local veh = PED.GET_VEHICLE_PED_IS_IN(ped, false)
    pcall(function()
        for modType=0,49 do
            local max = VEHICLE.GET_NUM_VEHICLE_MODS(veh, modType)
            if max > 0 then VEHICLE.SET_VEHICLE_MOD(veh, modType, max-1, false) end
        end
        VEHICLE.TOGGLE_VEHICLE_MOD(veh, 18, true) -- turbo
        for i=0,3 do VEHICLE.SET_VEHICLE_NEON_LIGHTS_ENABLED(veh, i, true) end
        if VEHICLE._SET_VEHICLE_NEON_LIGHTS_COLOUR then VEHICLE._SET_VEHICLE_NEON_LIGHTS_COLOUR(veh, 0, 150, 255) end
        VEHICLE.SET_VEHICLE_FIXED(veh)
        VEHICLE.SET_VEHICLE_ENGINE_HEALTH(veh, 1000.0)
    end)
    util.toast("Tunagem 100% aplicada")
    log("Tunagem 100% aplicada ao veículo atual")
end

-- ===================== MENU =====================
local root = menu.my_root()
local main = root:list("Spawner Supers+Sports", {}, "Spawn e tunagem (USO OFFLINE)")

main:action("Melhorar veículo atual 100%", {}, "Aplica upgrades máximos", function()
    upgrade_vehicle_full()
end)

-- Submenu Supers
local supers = main:list("Supers", {}, "Veículos Super")
local supers_list = {
    "adder","zentorno","infernus","turismor","cheetah","t20","osiris","entityxf","nero","reaper",
    "prototipo","italigtb","vacca","bullet","fmj","penetrator","taipan","krieger","vagner"
}
for _,model in ipairs(supers_list) do
    supers:action("Spawn " .. model, {}, "Spawn forçado " .. model, function() spawn_forced(model) end)
end

-- Submenu Sports
local sports = main:list("Sports", {}, "Veículos Sports")
local sports_list = {
    "comet2","banshee","sultan","elegy","feltzer2","ninef","massacro","jester","fusilade","alpha",
    "buffalo","schafter2","coquette","rapidgt","verlierer2","khamelion","lynx","seven70"
}
for _,model in ipairs(sports_list) do
    sports:action("Spawn " .. model, {}, "Spawn forçado " .. model, function() spawn_forced(model) end)
end

main:action("Aviso", {}, "Use apenas em modo offline!", function()
    util.toast("Aviso: use apenas em singleplayer/offline")
    log("Aviso exibido ao usuário")
end)
