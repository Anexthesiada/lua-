-- Spawner_MuscleSUV.lua
-- Stand (GTA V Legacy) - Modular Spawner: Muscle + SUVs
-- Funções: spawn forçado, tunagem 100% automática, log detalhado
-- Uso: APENAS SINGLEPLAYER / OFFLINE

util.require_natives()

local logfile = filesystem.scripts_dir() .. "\\musclesuv_log.txt"
local function log(msg)
    util.toast(msg)
    print("[MuscleSUV] " .. msg)
    local f = io.open(logfile, "a")
    if f then f:write("[MuscleSUV] " .. msg .. "\n"); f:close() end
end
local f = io.open(logfile, "w"); if f then f:close() end

local function request_model(hash)
    STREAMING.REQUEST_MODEL(hash)
    log("REQUEST_MODEL para hash=" .. tostring(hash))
end

local function try_create(hash, x,y,z,heading,net,scriptHost)
    local veh = VEHICLE.CREATE_VEHICLE(hash, x,y,z,heading, net, scriptHost)
    if veh ~= 0 then
        log(string.format("CREATE_VEHICLE sucesso em x=%.2f y=%.2f z=%.2f | net=%s, host=%s | handle=%s",
            x,y,z,tostring(net),tostring(scriptHost),tostring(veh)))
        return veh
    else
        log(string.format("CREATE_VEHICLE falhou em x=%.2f y=%.2f z=%.2f | net=%s, host=%s",
            x,y,z,tostring(net),tostring(scriptHost)))
        return nil
    end
end

local function spawn_forced(model)
    local hash = util.joaat(model)
    request_model(hash)
    local ped = players.user_ped()
    if not ped or ped == 0 then log("Ped inválido"); return end
    local coords = ENTITY.GET_ENTITY_COORDS(ped)
    local heading = ENTITY.GET_ENTITY_HEADING(ped)

    local attempts = {
        {dz=0.5, net=true, host=true},
        {dz=1.0, net=true, host=true},
        {dz=2.0, net=true, host=true},
        {dz=0.5, net=false, host=false},
        {dz=1.0, net=false, host=false},
        {dz=2.0, net=false, host=false},
    }

    local veh = nil
    for _,a in ipairs(attempts) do
        veh = try_create(hash, coords.x+5.0, coords.y, coords.z+a.dz, heading, a.net, a.host)
        if veh then break end
    end

    if not veh then
        log("CREATE_VEHICLE falhou. Tentando entities.create_vehicle")
        local pos = v3(coords.x+5.0, coords.y, coords.z+1.0)
        local ent = entities.create_vehicle(hash, pos, heading)
        if ent and ent ~= INVALID_GUID then
            log("entities.create_vehicle sucesso. GUID=" .. tostring(ent))
            veh = ent
        else
            log("entities.create_vehicle também falhou.")
            return
        end
    end

    pcall(function() PED.SET_PED_INTO_VEHICLE(ped, veh, -1) end)
    log("Spawn concluído para model=" .. model)
    STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(hash)
end

local function upgrade_vehicle_full()
    local ped = players.user_ped()
    if not PED.IS_PED_IN_ANY_VEHICLE(ped, false) then util.toast("Você não está em um veículo"); return end
    local veh = PED.GET_VEHICLE_PED_IS_IN(ped, false)
    pcall(function()
        for modType=0,49 do
            local max = VEHICLE.GET_NUM_VEHICLE_MODS(veh, modType)
            if max > 0 then VEHICLE.SET_VEHICLE_MOD(veh, modType, max-1, false) end
        end
        VEHICLE.TOGGLE_VEHICLE_MOD(veh, 18, true)
        for i=0,3 do VEHICLE.SET_VEHICLE_NEON_LIGHTS_ENABLED(veh, i, true) end
        if VEHICLE._SET_VEHICLE_NEON_LIGHTS_COLOUR then VEHICLE._SET_VEHICLE_NEON_LIGHTS_COLOUR(veh, 0, 150, 255) end
        VEHICLE.SET_VEHICLE_FIXED(veh)
        VEHICLE.SET_VEHICLE_ENGINE_HEALTH(veh, 1000.0)
    end)
    util.toast("Tunagem 100% aplicada")
    log("Tunagem 100% aplicada ao veículo atual")
end

local root = menu.my_root()
local main = root:list("Spawner Muscle+SUV", {}, "Spawn e tunagem (USO OFFLINE)")

main:action("Melhorar veículo atual 100%", {}, "Aplica upgrades máximos", function()
    upgrade_vehicle_full()
end)

-- Submenus
local muscle = main:list("Muscle", {}, "Veículos Muscle")
muscle:action("Spawn dominator", {}, "Spawn forçado dominator", function() spawn_forced("dominator") end)
muscle:action("Spawn gauntlet", {}, "Spawn forçado gauntlet", function() spawn_forced("gauntlet") end)
muscle:action("Spawn ruiner", {}, "Spawn forçado ruiner", function() spawn_forced("ruiner") end)
muscle:action("Spawn sabregt", {}, "Spawn forçado sabregt", function() spawn_forced("sabregt") end)
muscle:action("Spawn tampa", {}, "Spawn forçado tampa", function() spawn_forced("tampa") end)
muscle:action("Spawn dukes", {}, "Spawn forçado dukes", function() spawn_forced("dukes") end)
muscle:action("Spawn vigero", {}, "Spawn forçado vigero", function() spawn_forced("vigero") end)
muscle:action("Spawn stallion", {}, "Spawn forçado stallion", function() spawn_forced("stallion") end)
muscle:action("Spawn blade", {}, "Spawn forçado blade", function() spawn_forced("blade") end)
muscle:action("Spawn hermes", {}, "Spawn forçado hermes", function() spawn_forced("hermes") end)
muscle:action("Spawn chino", {}, "Spawn forçado chino", function() spawn_forced("chino") end)
muscle:action("Spawn lurcher", {}, "Spawn forçado lurcher", function() spawn_forced("lurcher") end)
muscle:action("Spawn vamos", {}, "Spawn forçado vamos", function() spawn_forced("vamos") end)
muscle:action("Spawn moonbeam", {}, "Spawn forçado moonbeam", function() spawn_forced("moonbeam") end)
muscle:action("Spawn peyote", {}, "Spawn forçado peyote", function() spawn_forced("peyote") end)
muscle:action("Spawn manana", {}, "Spawn forçado manana", function() spawn_forced("manana") end)
muscle:action("Spawn buccaneer", {}, "Spawn forçado buccaneer", function() spawn_forced("buccaneer") end)
muscle:action("Spawn clique", {}, "Spawn forçado clique", function() spawn_forced("clique") end)
muscle:action("Spawn ratloader", {}, "Spawn forçado ratloader", function() spawn_forced("ratloader") end)
muscle:action("Spawn phoenix", {}, "Spawn forçado phoenix", function() spawn_forced("phoenix") end)

local suvs = main:list("SUVs", {}, "Veículos SUVs")
suvs:action("Spawn baller", {}, "Spawn forçado baller", function() spawn_forced("baller") end)
suvs:action("Spawn huntley", {}, "Spawn forçado huntley", function() spawn_forced("huntley") end)
suvs:action("Spawn cavalcade", {}, "Spawn forçado cavalcade", function() spawn_forced("cavalcade") end)
suvs:action("Spawn granger", {}, "Spawn forçado granger", function() spawn_forced("granger") end)
suvs:action("Spawn seminole", {}, "Spawn forçado seminole", function() spawn_forced("seminole") end)
suvs:action("Spawn serrano", {}, "Spawn forçado serrano", function() spawn_forced("serrano") end)
suvs:action("Spawn radius", {}, "Spawn forçado radius", function() spawn_forced("radius") end)
suvs:action("Spawn dubsta", {}, "Spawn forçado dubsta", function() spawn_forced("dubsta") end)
suvs:action("Spawn landstalker", {}, "Spawn forçado landstalker", function() spawn_forced("landstalker") end)
suvs:action("Spawn mesa", {}, "Spawn forçado mesa", function() spawn_forced("mesa") end)
suvs:action("Spawn patriot", {}, "Spawn forçado patriot", function() spawn_forced("patriot") end)
suvs:action("Spawn toros", {}, "Spawn forçado toros", function() spawn_forced("toros") end)
suvs:action("Spawn xls", {}, "Spawn forçado xls", function() spawn_forced("xls") end)
suvs:action("Spawn rocoto", {}, "Spawn forçado rocoto", function() spawn_forced("rocoto") end)
suvs:action("Spawn gresley", {}, "Spawn forçado gresley", function() spawn_forced("gresley") end)
suvs:action("Spawn fq2", {}, "Spawn forçado fq2", function() spawn_forced("fq2") end)
suvs:action("Spawn rebla", {}, "Spawn forçado rebla", function() spawn_forced("rebla") end)
suvs:action("Spawn baller2", {}, "Spawn forçado baller2", function() spawn_forced("baller2") end)
suvs:action("Spawn baller3", {}, "Spawn forçado baller3", function() spawn_forced("baller3") end)
suvs:action("Spawn baller4", {}, "Spawn forçado baller4", function() spawn_forced("baller4") end)


main:action("Aviso", {}, "Use apenas em modo offline!", function()
    util.toast("Aviso: use apenas em singleplayer/offline")
    log("Aviso exibido ao usuário")
end)
